a general business oriented language based decision expressions the structure digital compute programming language covers wide class business processing applications presented such structure based identifying incorporating compiler aspects common processes class permits writing extremely compact programs comparatively complex applications terms tables control expressions express information characteristic application furthermore local process affecting output involved effected local modifications program modification entry tables this structure inexpensive preparation loading speed compilers translate source programs efficient machine codes the approach adopted departs conventional mechanical language design philosophies it stresses structural analysis class processes represented languages opposed emphasizing formal contents independent syntactical definitions it relies exclusively nonprocedural representation process sets tables relations data results control statements go to procedure descriptions translations flowcharts here invariant pattern procedure identified characteristic class batch processes this philosophy potential overcome known deficiencies business oriented languages fully meets requirements set codasyl languages including machine independence cacm february 1964 lombardi l a ca640208 jb march 10 1978 4:08 am