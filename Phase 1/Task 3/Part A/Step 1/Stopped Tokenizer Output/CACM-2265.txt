a model type checking most programming languages treat computation classes objects numbers strings labels functions for correct compilation execution question arises program properly constructed operations operands compatible the activity answering question called type checking this paper attempts isolate notion type checking presents partial solution type checking problem based notions abstraction application functions in program mapped expression decidable subset lambda calculus characterizes type relations program eliminates information the determination type wise correctness incorrectness program resolved reducing lambda calculus expression normal forms constant correct type wise correct program constant error an application type checking algol 60 made attendant problems faced notion type checking discussed cacm november 1972 ledgard h f type checking types lambda calculus models programming languages syntax semantics compiler writing language implementation formal definition 4.12 4.22 5.2 5.21 5.23 ca721104 jb january 27 1978 2:30 pm